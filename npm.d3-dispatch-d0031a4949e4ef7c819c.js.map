{"version":3,"sources":["webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-dispatch/src/index.js"],"names":["noop","value","dispatch","t","i","n","arguments","length","_","Error","Dispatch","this","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","type","get","c","set","callback","concat","push","prototype","constructor","on","typename","T","copy","call","that","args","Array","apply","src_dispatch","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"npm.d3-dispatch-d0031a4949e4ef7c819c.js","sourcesContent":["var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./dispatch\";\n"],"sourceRoot":""}