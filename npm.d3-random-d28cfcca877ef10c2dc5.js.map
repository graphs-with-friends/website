{"version":3,"sources":["webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js"],"names":["defaultSource","Math","random","normal","sourceRandomUniform","source","randomUniform","min","max","arguments","length","sourceRandomNormal","randomNormal","mu","sigma","x","r","y","sqrt","log","irwinHall","sourceRandomLogNormal","randomLogNormal","apply","this","exp","sourceRandomIrwinHall","randomIrwinHall","n","sum","i","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","lambda"],"mappings":"0FAAe,IAAAA,EAAA,WACf,OAAAC,KAAAC,UCCeC,GCAA,SAAAC,oBAAAC,GACf,SAAAC,cAAAC,EAAAC,GAKA,OAJAD,EAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAC,UAAAC,QAAAF,EAAAD,IAAA,GACAC,GAAAD,EACA,WACA,OAAAF,IAAAG,EAAAD,GAMA,OAFAD,cAAAD,OAAAD,oBAEAE,cAbe,CAcZN,GDdY,SAAAW,mBAAAN,GACf,SAAAO,aAAAC,EAAAC,GACA,IAAAC,EAAAC,EAGA,OAFAH,EAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,IAAAG,EAGA,SAAAF,EAAAE,EAAAF,IAAA,UAGA,GACAA,EAAA,EAAAV,IAAA,EACAY,EAAA,EAAAZ,IAAA,EACAW,EAAAD,IAAAE,WACOD,KAAA,GAEP,OAAAH,EAAAC,EAAAG,EAAAhB,KAAAiB,MAAA,EAAAjB,KAAAkB,IAAAH,OAMA,OAFAJ,aAAAP,OAAAM,mBAEAC,aAxBe,CAyBZZ,IEzBYoB,GCCA,SAAAC,sBAAAhB,GACf,SAAAiB,kBACA,IAAAV,EAAuBT,EAAME,UAAAkB,MAAAC,KAAAf,WAC7B,kBACA,OAAAR,KAAAwB,IAAAb,MAMA,OAFAU,gBAAAjB,OAAAgB,sBAEAC,gBAVe,CAWZtB,GDZY,SAAA0B,sBAAArB,GACf,SAAAsB,gBAAAC,GACA,kBACA,QAAAC,EAAA,EAAAC,EAAA,EAA8BA,EAAAF,IAAOE,EAAAD,GAAAxB,IACrC,OAAAwB,GAMA,OAFAF,gBAAAtB,OAAAqB,sBAEAC,gBAVe,CAWZ3B,KEVY,SAAA+B,kBAAA1B,GACf,SAAA2B,YAAAJ,GACA,IAAAD,EAA0BP,EAASf,SAATe,CAASQ,GACnC,kBACA,OAAAD,IAAAC,GAMA,OAFAI,YAAA3B,OAAA0B,kBAEAC,aAVe,CAWZhC,GCZY,SAAAiC,wBAAA5B,GACf,SAAA6B,kBAAAC,GACA,kBACA,OAAAlC,KAAAkB,IAAA,EAAAd,KAAA8B,GAMA,OAFAD,kBAAA7B,OAAA4B,wBAEAC,kBATe,CAUZlC","file":"npm.d3-random-d28cfcca877ef10c2dc5.js","sourcesContent":["export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n"],"sourceRoot":""}