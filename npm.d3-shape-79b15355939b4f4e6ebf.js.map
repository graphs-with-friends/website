{"version":3,"sources":["webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js"],"names":["Math","abs","atan2","cos","max","min","sin","sqrt","epsilon","pi","PI","tau","Linear","context","this","_context","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","point","x","y","lineTo","moveTo","linear","curveRadial","Radial","curve","_curve","radial","a","r","Array","slice","kr","noop","that","bezierCurveTo","_x0","_x1","_y0","_y1","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","x0","y0","Bundle","beta","_basis","_beta","_x","_y","j","length","t","dx","dy","i","push","custom","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","x1","y1","x2","y2","_l01_a","_l01_2a","_l12_a","_l12_2a","n","_l23_a","b","_l23_2a","m","CatmullRom","alpha","_alpha","x23","y23","pow","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","p","slope2","h","monotone_point","t0","t1","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","Object","create","call","px","py","i0","i1","Step","_t"],"mappings":"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","file":"npm.d3-shape-79b15355939b4f4e6ebf.js","sourcesContent":["export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","export var slice = Array.prototype.slice;\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default function() {}\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n"],"sourceRoot":""}