{"version":3,"sources":["webpack:///./node_modules/d3-scale/src/init.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/index.js"],"names":["initRange","domain","range","arguments","length","this","array","Array","prototype","slice","map","implicit","name","ordinal","index","Object","d3_collection_src","unknown","scale","d","key","i","get","set","push","_","n","has","call","copy","apply","__webpack_require__","__webpack_exports__"],"mappings":"+FAAO,SAAAA,UAAAC,EAAAC,GACP,OAAAC,UAAAC,QACA,aACA,OAAAC,KAAAH,MAAAD,GAA+B,MAC/B,QAAAI,KAAAH,SAAAD,UAEA,OAAAI,gBCNAC,EAAAC,MAAAC,UAGOC,GADAH,EAAAI,IACAJ,EAAAG,OCCAE,EAAA,CAAgBC,KAAA,YAER,SAAAC,UACf,IAAAC,EAAcC,OAAAC,EAAA,EAAAD,GACdd,EAAA,GACAC,EAAA,GACAe,EAAAN,EAEA,SAAAO,MAAAC,GACA,IAAAC,EAAAD,EAAA,GAAAE,EAAAP,EAAAQ,IAAAF,GACA,IAAAC,EAAA,CACA,GAAAJ,IAAAN,EAAA,OAAAM,EACAH,EAAAS,IAAAH,EAAAC,EAAApB,EAAAuB,KAAAL,IAEA,OAAAjB,GAAAmB,EAAA,GAAAnB,EAAAE,QAyBA,OAtBAc,MAAAjB,OAAA,SAAAwB,GACA,IAAAtB,UAAAC,OAAA,OAAAH,EAAAQ,QACAR,EAAA,GAAAa,EAAyBC,OAAAC,EAAA,EAAAD,GAEzB,IADA,IAAAI,EAAAC,EAAAC,GAAA,EAAAK,EAAAD,EAAArB,SACAiB,EAAAK,GAAAZ,EAAAa,IAAAP,GAAAD,EAAAM,EAAAJ,IAAA,KAAAP,EAAAS,IAAAH,EAAAnB,EAAAuB,KAAAL,IACA,OAAAD,OAGAA,MAAAhB,MAAA,SAAAuB,GACA,OAAAtB,UAAAC,QAAAF,EAAuCO,EAAKmB,KAAAH,GAAAP,OAAAhB,EAAAO,SAG5CS,MAAAD,QAAA,SAAAQ,GACA,OAAAtB,UAAAC,QAAAa,EAAAQ,EAAAP,OAAAD,GAGAC,MAAAW,KAAA,WACA,OAAAhB,QAAAZ,EAAAC,GAAAe,YAGEjB,UAAS8B,MAAAZ,MAAAf,WAEXe,2BC3CAa,EAAAZ,EAAAa,EAAA,sBAAAnB","file":"npm.d3-scale-932ae00a13882352e30c.js","sourcesContent":["export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity\";\n\nexport {\n  default as scaleLinear\n} from \"./linear\";\n\nexport {\n  default as scaleLog\n} from \"./log\";\n\nexport {\n  default as scaleSymlog\n} from \"./symlog\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold\";\n\nexport {\n  default as scaleTime\n} from \"./time\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime\";\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog\n} from \"./sequential\";\n\nexport {\n  default as scaleSequentialQuantile\n} from \"./sequentialQuantile\";\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog\n} from \"./diverging\";\n\nexport {\n  default as tickFormat\n} from \"./tickFormat\";\n"],"sourceRoot":""}